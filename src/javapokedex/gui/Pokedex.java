/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapokedex.gui;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import objs.Pokemon;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Lukas
 */
public class Pokedex extends javax.swing.JFrame {

    /**
     * Creates new form Pokedex
     */
    public Pokedex() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        pokeMoves = new javax.swing.JScrollPane();
        pokeMovesArea = new javax.swing.JTextArea();
        pokePicturePanel = new javax.swing.JPanel();
        pokePicture = new javax.swing.JLabel();
        pokeDetailsPanel = new javax.swing.JPanel();
        pokeAbility = new javax.swing.JLabel();
        pokeName = new javax.swing.JLabel();
        pokeInputPanel = new javax.swing.JPanel();
        pokeSubmitButton = new javax.swing.JButton();
        pokeNameInput = new javax.swing.JTextField();
        pokeNameLabel = new javax.swing.JLabel();
        movesListLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titlePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        titleLabel.setBackground(new java.awt.Color(211, 54, 63));
        titleLabel.setFont(new java.awt.Font("Pocket Monk", 0, 48)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Pokedex");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );

        pokeMovesArea.setColumns(20);
        pokeMovesArea.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        pokeMovesArea.setRows(5);
        pokeMoves.setViewportView(pokeMovesArea);

        pokePicturePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pokePicture.setToolTipText("");

        javax.swing.GroupLayout pokePicturePanelLayout = new javax.swing.GroupLayout(pokePicturePanel);
        pokePicturePanel.setLayout(pokePicturePanelLayout);
        pokePicturePanelLayout.setHorizontalGroup(
            pokePicturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pokePicturePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pokePicture, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pokePicturePanelLayout.setVerticalGroup(
            pokePicturePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pokePicturePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pokePicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pokeDetailsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pokeAbility.setFont(new java.awt.Font("Yu Gothic", 0, 18)); // NOI18N
        pokeAbility.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pokeAbility.setText("Ability");
        pokeAbility.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        pokeName.setFont(new java.awt.Font("Yu Gothic", 0, 24)); // NOI18N
        pokeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pokeName.setText("Name");
        pokeName.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pokeDetailsPanelLayout = new javax.swing.GroupLayout(pokeDetailsPanel);
        pokeDetailsPanel.setLayout(pokeDetailsPanelLayout);
        pokeDetailsPanelLayout.setHorizontalGroup(
            pokeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pokeDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pokeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pokeDetailsPanelLayout.createSequentialGroup()
                        .addComponent(pokeAbility)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pokeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pokeDetailsPanelLayout.setVerticalGroup(
            pokeDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pokeDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pokeName)
                .addGap(65, 65, 65)
                .addComponent(pokeAbility)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pokeSubmitButton.setText("Submit");
        pokeSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokeSubmitButtonActionPerformed(evt);
            }
        });

        pokeNameInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pokeNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokeNameInputActionPerformed(evt);
            }
        });

        pokeNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pokeNameLabel.setText("Pokemon Name: ");

        javax.swing.GroupLayout pokeInputPanelLayout = new javax.swing.GroupLayout(pokeInputPanel);
        pokeInputPanel.setLayout(pokeInputPanelLayout);
        pokeInputPanelLayout.setHorizontalGroup(
            pokeInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pokeInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pokeNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pokeNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(pokeSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        pokeInputPanelLayout.setVerticalGroup(
            pokeInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pokeInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pokeInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pokeNameLabel)
                    .addComponent(pokeNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pokeSubmitButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        movesListLabel.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        movesListLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movesListLabel.setText("Moves");
        movesListLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        movesListLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pokeDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pokeMoves, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(movesListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(pokePicturePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pokeInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pokeInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pokeDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokePicturePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(movesListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pokeMoves, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pokeNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokeNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pokeNameInputActionPerformed

    private void pokeSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokeSubmitButtonActionPerformed
        try {
            JSONObject myResponse = getPokeResponse(pokeNameInput.getText());
            if (myResponse != null) {
                Pokemon p = new Pokemon(myResponse);
                pokeName.setText(capitalise(p.getName()));
                pokeAbility.setText("Ability: " + capitalise(p.getAbility()));
                String moveString = "";
                for (int i = 0; i < p.getMoves().size(); i++) {
                    moveString = capitalise(p.getMoves().get(i));
                    pokeMovesArea.append(moveString);
                    pokeMovesArea.append("\n");
                }
                pokePicture.setIcon(new ImageIcon(p.getImage()));
            } else {
                pokeName.setText("POKEMON");
                pokeAbility.setText("NOT \n FOUND");
            }

        } catch (JSONException | IOException ex) {
            Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_pokeSubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel movesListLabel;
    private javax.swing.JLabel pokeAbility;
    private javax.swing.JPanel pokeDetailsPanel;
    private javax.swing.JPanel pokeInputPanel;
    private javax.swing.JScrollPane pokeMoves;
    private javax.swing.JTextArea pokeMovesArea;
    private javax.swing.JLabel pokeName;
    private javax.swing.JTextField pokeNameInput;
    private javax.swing.JLabel pokeNameLabel;
    private javax.swing.JLabel pokePicture;
    private javax.swing.JPanel pokePicturePanel;
    private javax.swing.JButton pokeSubmitButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

    private static JSONObject getPokeResponse(String pokemon) throws MalformedURLException, IOException, JSONException {
        pokemon = pokemon.toLowerCase();
        String url = "https://pokeapi.co/api/v2/pokemon/";
        url = url.concat(pokemon);
        URL obj = new URL(url);
        JSONObject jsonResponse;

        try {
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            try {
                // optional default is GET
                con.setRequestMethod("GET");
            } catch (ProtocolException ex) {
                Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
            }
            //add request header
            con.setRequestProperty("User-Agent", "Mozilla/5.0");
            BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(Pokedex.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Read JSON response and print
            jsonResponse = new JSONObject(response.toString());
        } catch (FileNotFoundException fnfe) {
            return null;
        }

        return jsonResponse;
    }

    private static String capitalise(String input) {

        if (input == null || input.isEmpty()) {
            return input;
        }

        return input.substring(0, 1).toUpperCase() + input.substring(1);
    }
}
